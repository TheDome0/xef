/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package org.openapitools.client.models

import io.kotlintest.specs.ShouldSpec

class CreateRunRequestTest : ShouldSpec() {
  init {
    // uncomment below to create an instance of CreateRunRequest
    // val modelInstance = CreateRunRequest()

    // to test the property `assistantId` - The ID of the
    // [assistant](/docs/api-reference/assistants) to use to execute this run.
    should("test assistantId") {
      // uncomment below to test the property
      // modelInstance.assistantId shouldBe ("TODO")
    }

    // to test the property `model` - The ID of the [Model](/docs/api-reference/models) to be used
    // to execute this run. If a value is provided here, it will override the model associated with
    // the assistant. If not, the model associated with the assistant will be used.
    should("test model") {
      // uncomment below to test the property
      // modelInstance.model shouldBe ("TODO")
    }

    // to test the property `instructions` - Overrides the
    // [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is
    // useful for modifying the behavior on a per-run basis.
    should("test instructions") {
      // uncomment below to test the property
      // modelInstance.instructions shouldBe ("TODO")
    }

    // to test the property `additionalInstructions` - Appends additional instructions at the end of
    // the instructions for the run. This is useful for modifying the behavior on a per-run basis
    // without overriding other instructions.
    should("test additionalInstructions") {
      // uncomment below to test the property
      // modelInstance.additionalInstructions shouldBe ("TODO")
    }

    // to test the property `tools` - Override the tools the assistant can use for this run. This is
    // useful for modifying the behavior on a per-run basis.
    should("test tools") {
      // uncomment below to test the property
      // modelInstance.tools shouldBe ("TODO")
    }

    // to test the property `metadata` - Set of 16 key-value pairs that can be attached to an
    // object. This can be useful for storing additional information about the object in a
    // structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
    // 512 characters long.
    should("test metadata") {
      // uncomment below to test the property
      // modelInstance.metadata shouldBe ("TODO")
    }
  }
}
